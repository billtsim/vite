'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

/** Components */

var _reactBootstrap = require('react-bootstrap');

var _zxcvbn = require('zxcvbn');

var _zxcvbn2 = _interopRequireDefault(_zxcvbn);

var Labels = ['Weak', 'Normal', 'Medium', 'Strong', 'Very Strong'];
var ClassNames = ['danger', 'warning', 'primary', 'success', 'success'];
var InputFeedBacks = ['error', 'success', 'success', 'success', 'success'];

var PasswordInput = (function (_Component) {
  _inherits(PasswordInput, _Component);

  function PasswordInput(props, context) {
    _classCallCheck(this, PasswordInput);

    _get(Object.getPrototypeOf(PasswordInput.prototype), 'constructor', this).call(this, props, context);
    this.state = this.getInitState();
  }

  _createClass(PasswordInput, [{
    key: 'getInitState',
    value: function getInitState() {
      return {
        score: null,
        warning: null,
        suggestions: []
      };
    }
  }, {
    key: 'scoreToLabel',
    value: function scoreToLabel() {
      if (Number.isInteger(this.state.score)) {
        return Labels[this.state.score];
      } else {
        return '';
      }
    }
  }, {
    key: 'scoreToClass',
    value: function scoreToClass() {
      if (Number.isInteger(this.state.score)) {
        return ClassNames[this.state.score];
      } else {
        return 'default';
      }
    }
  }, {
    key: 'scoreToPercentage',
    value: function scoreToPercentage() {
      if (Number.isInteger(this.state.score)) {
        return (this.state.score + 1) * 20;
      } else {
        return 0;
      }
    }
  }, {
    key: 'scoreToInputFeedBack',
    value: function scoreToInputFeedBack() {
      if (Number.isInteger(this.state.score)) {
        return InputFeedBacks[this.state.score];
      } else {
        return null;
      }
    }
  }, {
    key: 'checkPassword',
    value: function checkPassword(e) {
      var password = e.target.value;
      if (this.props.valueLink) {
        this.props.valueLink.requestChange(password);
      }
      if (password === '') {
        this.setState(this.getInitState());
        return;
      }
      var result = (0, _zxcvbn2['default'])(password);
      var newState = {
        score: result.score,
        label: this.scoreToLabel(result.score),
        warning: result.feedback.warning,
        suggestions: result.feedback.suggestions
      };
      this.setState(newState);
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      return this.refs.password.getValue();
    }
  }, {
    key: 'isAcceptable',
    value: function isAcceptable() {
      return Number.isInteger(this.state.score) && this.state.score >= 1;
    }
  }, {
    key: 'renderWarning',
    value: function renderWarning() {
      if (this.state.warning) {
        return _react2['default'].createElement(
          _reactBootstrap.Alert,
          { bsStyle: 'warning' },
          _react2['default'].createElement('i', { className: 'fa fa-exclamation-triangle' }),
          ' ',
          this.state.warning
        );
      }
    }
  }, {
    key: 'renderSuggestions',
    value: function renderSuggestions() {
      if (this.state.suggestions && this.state.suggestions.length > 0) {
        var suggestions = this.state.suggestions.map(function (suggestion, count) {
          return _react2['default'].createElement(
            'p',
            { key: count },
            _react2['default'].createElement('i', { className: 'fa fa-info-circle' }),
            ' ',
            suggestion
          );
        });
        return _react2['default'].createElement(
          _reactBootstrap.Alert,
          { bsStyle: 'info' },
          suggestions
        );
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var inputFeedBack = this.scoreToInputFeedBack();
      var _props = this.props;
      var valueLink = _props.valueLink;
      var className = _props.className;
      var ref = _props.ref;
      var type = _props.type;

      var other = _objectWithoutProperties(_props, ['valueLink', 'className', 'ref', 'type']);

      return _react2['default'].createElement(
        'div',
        { className: 'password-input' },
        _react2['default'].createElement(_reactBootstrap.Input, _extends({ type: 'password',
          ref: 'password',
          className: 'form-control',
          onChange: this.checkPassword.bind(this),
          required: true,
          bsStyle: inputFeedBack,
          hasFeedback: !!inputFeedBack
        }, other)),
        _react2['default'].createElement(_reactBootstrap.ProgressBar, { striped: this.state.score === 4,
          bsSize: 'xs',
          bsStyle: this.scoreToClass(),
          now: this.scoreToPercentage(),
          label: this.scoreToLabel() }),
        ' ',
        this.renderWarning(),
        ' ',
        this.renderSuggestions()
      );
    }
  }]);

  return PasswordInput;
})(_react.Component);

exports['default'] = PasswordInput;
module.exports = exports['default'];